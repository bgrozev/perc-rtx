



Network Working Group                                          B. Grozev
Internet-Draft                                                   E. Ivov
Intended status: Standards Track                               Atlassian
Expires: January 16, 2018                                  July 15, 2017


        Using RTX with Privacy Enhanced RTP Conferencing (PERC)
                    draft-grozev-perc-double-rtx-01

Abstract

   This document describes the use of the RTX format for RTP packet
   retransmission in the context of a PERC (Privacy Enhanced RTP
   Conferenceing) conference.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 16, 2018.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Grozev & Ivov           Expires January 16, 2018                [Page 1]

Internet-Draft                 RTX double                      July 2017


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   2
   3.  Terminating RTX . . . . . . . . . . . . . . . . . . . . . . .   2
   4.  RTX and SRTP  . . . . . . . . . . . . . . . . . . . . . . . .   3
   5.  RTX and SRTP Double . . . . . . . . . . . . . . . . . . . . .   4
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   5
   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   5
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   5
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   6
   Appendix A.  RTP Padding  . . . . . . . . . . . . . . . . . . . .   6
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   7

1.  Introduction

   In multi-endpoint RTP conferences it is desired for middleboxes (e.g.
   Selecting Forwarding Units (SFUs), or in the case of PERC Media
   Distributors (MDs)) to terminate RTP packet retransmission, because
   this can reduce the retransmission delay and the unnecessary
   retransmission of packets.  In the context of PERC, if RTX is handled
   as a regular media stream, then an MD can not terminate packet
   retransmission.

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  Terminating RTX

   By terminating RTX by an MD we mean that the MD interprets incoming
   RTX packets, and also generates RTX packets as necessary (e.g. in
   response to RTCP NACK packets) to repair streams sent by the MD to
   receivers.

   Terminating RTX is desirable because it allows for repair with lower
   latency, and, in a multi-party scenario, avoids the unnecessary
   transmission of repair packets.

   The RTX format (RFC 4588) uses a separate SSRC and payload type than
   the regular media streams, and because of this it has a different RTP
   sequence number space.  It uses the first two bytes of the RTP
   payload (the Original Sequence Number field (OSN)) to transport the
   RTP sequence number of the retransmitted packet.  See Figure 1.




Grozev & Ivov           Expires January 16, 2018                [Page 2]

Internet-Draft                 RTX double                      July 2017


    +-----------------+                      +---------+    +------+
    |  MD Processing  |--------------------->|   HBH   |--->| Wire |
    |  Packet Output  |                 +--->| Protect |    |      |
    |  (Unprotected)  |                 |    +---------+    +------+
    +-----------------+                 |
                 |                      |
                 |                      |
                 |  +-----------+    +-----+
                 +->| Pkt Cache |--->| RTX |
                    +-----------+    +-----+


           Figure 1: RTX and SRTP Double in a Media Distributor

4.  RTX and SRTP

   When using RTX and SRTP [RFC3711] together, endpoints operate in
   roughly the following way:

   o packets that come out of RTP packetization, go through SRTP
     processing and are then sent on the wire

   o a packet cache stores a copy of the raw (i.e. unencrypted) version
     of some (or all) packets.  When a retransmission is necessary for a
     certain packet, endpoints take it out of the cache and encapsulate
     it in an RTX packet.  Next, they pass the new RTX packet through
     SRTP processing and then send it over the wire Figure 2.


    +----------------+                      +------+    +------+
    | RTP Packetizer |--------------------->|      |    |      |
    +----------------+                      | SRTP |--->| Wire |
     |                                 +--->|      |    |      |
     |                                 |    +------+    +------+
     |                                 |
     |    +--------------+    +-----+  |
     +--->| Packet Cache |--->| RTX |--+
          +--------------+    +-----+


                 Figure 2: SRTP and RTX: regular operation

   One of the ideas behind PERC and more specifically the SRTP Double
   Encryption Procedures [I-D.ietf-perc-double] is to make it a
   transparent, drop-in replacement to SRTP processing.  Regular RTP
   operation with double looks roughly like Figure 3:





Grozev & Ivov           Expires January 16, 2018                [Page 3]

Internet-Draft                 RTX double                      July 2017


                     +---------------------------+
                     |           SRTP            |
    +------------+   | +---------+   +---------+ |    +------+
    |    RTP     |-->| |   E2E   |-->|   HBH   | |--->| Wire |
    | Packetizer |   | | Protect |   | Protect | |    |      |
    +------------+   | +---------+   +---------+ |    +------+
                     +---------------------------+


                 Figure 3: SRTP and RTX: regular operation

   Once RTX comes into play however, viewing all SRTP operations as a
   single monolithic module becomes a problem.  If a PERC endpoint using
   Double SRTP to operate as regular SRTP endpoints (that is, it caches
   clear RTP packets, which it uses to generate RTX packets, that then
   undergo all SRTP-related processing) RTX packets would end up being
   end-to-end (E2E) encrypted.  Media Distributor (MD) would then not
   have access to the RTX OSN field.  This would effectively prevent the
   MD from terminating retransmissions.

5.  RTX and SRTP Double

   For the reasons outlined in Section 4 above, SRTP Double, requires
   RTX to operate as a Hop By Hop (HBH) mechanism.  In order to achieve
   this, RTX implementations in endpoints and MDs will cache E2E
   encrypted packets before they undergo HBH encryption and treat that
   E2E protected cache as the source of the payload they need to
   retransmit when necessary.  Once an RTX packet is constructed out of
   an E2E encrypted packet, it will undergo HBH encryption (just as it
   would with standard SRTP [RFC3711] implementations).

   Specifically, when an SRTP Double entity (be it an endpoint or an MD)
   retransmits a packet using RTX it:

   1.  Takes an E2E encrypted packet to be retransmitted.

   2.  Applies the RTX transformation (replaces the SSRC, payload type
       and sequence number, and inserts the OSN field in the payload).

   3.  Performs the HBH SRTP transformation.

   For an SRTP Double endpointthis transformation would roughly look
   like this.








Grozev & Ivov           Expires January 16, 2018                [Page 4]

Internet-Draft                 RTX double                      July 2017


    +------------+   +---------+                 +---------+    +------+
    |    RTP     |-->|   E2E   |---------------->|   HBH   |--->| Wire |
    | Packetizer |   | Protect |             +-->| Protect |    |      |
    +------------+   +---------+             |   +---------+    +------+
                       |                     |
                       |                     |
                       |  +-----------+   +-----+
                       +->| Pkt Cache |-->| RTX |
                          +-----------+   +-----+


             Figure 4: RTX with and SRTP Double in an Endpoint

   For an MD, on the other hand, PERC operation remains virtually
   unchanged as compared to regular SRTP processing.  See Figure 5.


    +-----------------+                      +---------+    +------+
    |  MD Processing  |--------------------->|   HBH   |--->| Wire |
    |  Packet Output  |                 +--->| Protect |    |      |
    | (E2E Protected) |                 |    +---------+    +------+
    +-----------------+                 |
                 |                      |
                 |                      |
                 |  +-----------+    +-----+
                 +->| Pkt Cache |--->| RTX |
                    +-----------+    +-----+


         Figure 5: RTX with and SRTP Double in a Media Distributor

6.  Security Considerations

7.  Acknowledgements

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.








Grozev & Ivov           Expires January 16, 2018                [Page 5]

Internet-Draft                 RTX double                      July 2017


8.2.  Informative References

   [I-D.ietf-avtext-framemarking]
              Berger, E., Nandakumar, S., and M. Zanaty, "Frame Marking
              RTP Header Extension", draft-ietf-avtext-framemarking-04
              (work in progress), March 2017.

   [I-D.ietf-perc-double]
              Jennings, C., Jones, P., and A. Roach, "Frame Marking RTP
              Header Extension", draft-ietf-perc-double-05 (work in
              progress), June 2017.

   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.
              Jacobson, "RTP: A Transport Protocol for Real-Time
              Applications", STD 64, RFC 3550, DOI 10.17487/RFC3550,
              July 2003, <http://www.rfc-editor.org/info/rfc3550>.

   [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.
              Norrman, "The Secure Real-time Transport Protocol (SRTP)",
              RFC 3711, DOI 10.17487/RFC3711, March 2004,
              <http://www.rfc-editor.org/info/rfc3711>.

   [RFC4588]  Rey, J., Leon, D., Miyazaki, A., Varsa, V., and R.
              Hakenberg, "RTP Retransmission Payload Format", RFC 4588,
              DOI 10.17487/RFC4588, July 2006,
              <http://www.rfc-editor.org/info/rfc4588>.

   [RFC7667]  Westerlund, M. and S. Wenger, "RTP Topologies", RFC 7667,
              DOI 10.17487/RFC7667, November 2015,
              <http://www.rfc-editor.org/info/rfc7667>.

Appendix A.  RTP Padding

   Originally this document also discussed potential PERC-related
   problems when RTX is also used for probing in the context of
   bandwidth estimation.  While the practice is somewhat widespred, from
   an IETF perspective it is not considered as a "clean" approach to
   probing, which is why the document no longer attempts to solve its
   PERC-related issues.  The following section is hence only kept for
   historical purposes.

   RFC3550 allows an RTP packet to contain only padding, and no payload.
   The number of padding bytes is contained in the last byte of the
   payload, and it is encrypted by SRTP.

   In the context of PERC, an MD does not have access to the padding
   length field of an RTX packet, and therefore it can not determine
   whether the packet contains non-padding payload or not.



Grozev & Ivov           Expires January 16, 2018                [Page 6]

Internet-Draft                 RTX double                      July 2017


   RTX packets with padding only are currently used by some bandwidth
   estimation algorithms when probing for additional bandwidth
   availability.  Bandwidth estimations have a strictly hop-by-hop
   context, so MDs therefore usually terminate them by recognizing and
   dropping all incoming probe packets.  They then generate new ones for
   their own estimations.

   In order to recognize an incoming packet as a probe-only one, an MD
   needs to inspect its last octet and compare it to the overall length
   of the payload.  Yet, in a PERC scenario this last octet is protected
   by PERC's end-to-end encryption and will hence be unreadable to the
   MD.  The MD will therefore have no choice but to treat this as a
   regular RTX packet: replace its sequence number, payload type, and
   SSRC and forward it to receivers that would likely fail in
   unpredictable ways (e.g., either failing SRTP authentication or maybe
   even feeding garbage data to their decoders).

   A similar problem also exists for probe packets the the MD generates
   and that receivers have no way to reliably recognize.

   In order for MDs and receivers to properly terminate bandwidth
   estimation, it is therefore necessary for an MD to reliably recognize
   such padding-only packets.

   The use of a single "padding-only" bit in any new or existing RTP
   header extension is ony way to achieve this.  PERC MDs are already
   likely to rely on the framemarking header extension
   [I-D.ietf-avtext-framemarking] and we propose transporting this bit
   there.  We propose to use the first bit of the unused bits in the
   format for non-scalable streams, which is marked as the P bit in the
   diagram below.


     0                   1
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |  ID=? |  L=0  |S|E|I|D|P 0 0 0|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


                        Figure 6: Extension Format

Authors' Addresses








Grozev & Ivov           Expires January 16, 2018                [Page 7]

Internet-Draft                 RTX double                      July 2017


   Boris Grozev
   Atlassian
   303 Colorado Street, #1600
   Austin  78701
   USA

   Phone: +1-512-640-3000
   Email: eivov@atlassian.com


   Emil Ivov
   Atlassian
   303 Colorado Street, #1600
   Austin  78701
   USA

   Phone: +1-512-640-3000
   Email: eivov@atlassian.com

































Grozev & Ivov           Expires January 16, 2018                [Page 8]
